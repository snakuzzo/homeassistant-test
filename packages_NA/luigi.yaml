# ENTITA' DI TEST

# Entità per gestire il tuo sensore di luce
# con l'input_number di tipo slider imposto una luminosità da 0 a 300
# che viene poi passata al sensor template (con lo stesso nome che usi tu)

input_number:
  slider1:
    name: dimmer_brightness
    initial: 0
    min: 0
    max: 300
    step: 1

sensor:
  - platform: template
    sensors:
      dimmer_brightness:
        friendly_name: "Sensore Luigi"
        value_template: "{{ states('input_number.slider1') | int }}"

# Entità per gestire una luce fake
# L'input boolean serve per tenere lo stato dell'entità di tipo light
# creata con platform template

input_boolean:
  luigi_light:

light:
  - platform: template
    lights:
      21801868cc50e3150a71:
        friendly_name: "Luce Luigi"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.luigi_light
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.luigi_light

# Questa è la tua automazione (ho usato gli stessi nomi che hai tu)

automation:

- alias: Tradfri Dimmer ON/OFF
  trigger:
  - platform: numeric_state
    entity_id: sensor.dimmer_brightness
    above: 0
  - platform: numeric_state
    entity_id: sensor.dimmer_brightness
    below: 1
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state | int > 0 }}"
      sequence:
      - service: light.turn_on
        data:
          entity_id: light.21801868cc50e3150a71
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state | int == 0 }}"
      sequence:
      - service: light.turn_off
        data:
          entity_id: light.21801868cc50e3150a71